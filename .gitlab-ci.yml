stages:
   - build
   - package
   - deploy

variables:
   GIT_STRATEGY: clone

build-koviz-rh8:
   stage: build
   script:
      #- qmake-qt5
      #- make
      - mkdir -p ${CI_PROJECT_DIR}/bin
      - echo "Test" >> ${CI_PROJECT_DIR}/bin/koviz
   artifacts:
      paths:
         # Koviz executable in bin directory
         - ${CI_PROJECT_DIR}/bin
      expire_in: 1 week
   cache: []
   image: ${CI_REGISTRY_IMAGE}:rh8
   tags:
      - dind

create-rpm-rh8:
   stage: package
   cache: []
   needs: ["build-koviz-rh8"]
   image: ${CI_REGISTRY_IMAGE}:rh8
   tags:
      - dind
   script:
      - GIT_DIR="${CI_PROJECT_DIR}/.git"
      - TAG="$(git --git-dir $GIT_DIR describe --long --tags --always 
                        | egrep -o '^[^-]+')"
      - COMMIT="$(git --git-dir $GIT_DIR describe --long --tags --always 
                        | cut -f2 -d '-')"
      - OS_VERSION_ID="$(grep VERSION_ID /etc/os-release 
                        | sed 's/VERSION_ID="\(.*\)"/\1/' 
                        | cut -d. -f1)"
      
      - rpmdev-setuptree
      - mv ${CI_PROJECT_DIR}/bin/koviz $HOME/rpmbuild/BUILD
      - rpmbuild -bb 
                 --define "_prefix /usr/bin" 
                 --define "_version ${TAG}" 
                 --define "_release ${COMMIT}.el${OS_VERSION_ID}" 
                 ${CI_PROJECT_DIR}/rpm/koviz.spec

      - mkdir ${CI_PROJECT_DIR}/artifacts
      - mv ${HOME}/rpmbuild/RPMS/x86_64/koviz*.rpm ${CI_PROJECT_DIR}/artifacts
      - echo ${CI_JOB_ID} > ${CI_PROJECT_DIR}/artifacts/rh8-rpm-job-id.txt
      - rm -rf ${HOME}/rpmbuild
      - du -h ${CI_PROJECT_DIR}/artifacts
   artifacts:
      paths:
         - ${CI_PROJECT_DIR}/artifacts
      expire_in: 1 week

keep-tag-artifacts:
   stage: deploy
   needs: ["create-rpm-rh8"]
   variables:
      GIT_STRATEGY: none
   script:
      - RPM_JOB_ID="$(cat $CI_PROJECT_DIR/artifacts/rh8-rpm-job-id.txt)"
      - |
        if [[ -n "$CI_COMMIT_TAG" ]]; then
           echo "Keep tagged commit ($CI_COMMIT_TAG) artifacts!"
           ESGL="https://esgl-gitlab.jsc.nasa.gov/api/v4/projects"
           curl -X POST \
                -H "PRIVATE-TOKEN: $KOVIZ_API" \
                "$ESGL/$CI_PROJECT_ID/jobs/$RPM_JOB_ID/artifacts/keep"
        else
             echo "This is not a tagged commit. Artifacts will expire as usual."
        fi
   cache: []
   tags:
      - dind
   image: registry.access.redhat.com/ubi8/ubi:latest

tag-github:
   stage: deploy
   needs: ["create-rpm-rh8"]
   script:
      - echo "Tagging GitHub repository with tag ${CI_COMMIT_TAG}"
      - dnf install -y curl
      - |
        curl -X POST -H "Authorization: token $KOVIZ_GITHUB_API" -d @- https://api.github.com/repos/nasa/koviz/git/tags <<EOF
        {
          "tag": "$CI_COMMIT_TAG",
          "message": "Release $CI_COMMIT_TAG",
          "object": "$CI_COMMIT_SHA",
          "type": "commit",
          "tagger": {
            "name": "JSC ESGL GitLab CI",
            "email": "keith.vetter@gmail.com",
            "date": "$(date --utc --iso-8601=seconds)"
          }
        }
        EOF
      - |
        curl -X POST -H "Authorization: token $KOVIZ_GITHUB_API" -d @- https://api.github.com/repos/nasa/koviz/git/refs <<EOF
        {
          "ref": "refs/tags/$CI_COMMIT_TAG",
          "sha": "$CI_COMMIT_SHA"
        }
        EOF
   only:
     - tags
   tags:
     - dind
   image: registry.access.redhat.com/ubi8/ubi:latest

upload-to-github:
   stage: deploy
   needs: ["tag-github"]
   script:
      - echo "Creating GitHub release for tag ${CI_COMMIT_TAG}"
      - dnf install -y jq curl

      - |
        JSON=$(cat <<EOF
        {
          "tag_name": "$CI_COMMIT_TAG",
          "name": "Release $CI_COMMIT_TAG",
          "body": "This is an automated release for version $CI_COMMIT_TAG.",
          "draft": false,
          "prerelease": false
        }
        EOF
        )
        
      - |
        RELEASE_ID=$(curl -X POST \
                          -H "Authorization: token $KOVIZ_GITHUB_API" \
                          -H "Content-Type: application/json" \
                          -d "$JSON" \
                          https://api.github.com/repos/nasa/koviz/releases | jq -r .id)
          
      - echo "Uploading RPM to GitHub release $RELEASE_ID"
      - |
        for file in ${CI_PROJECT_DIR}/artifacts/*.rpm; do
            echo "Upload file=$file"
            ls -lh $file
            curl -X POST -H "Authorization: token $KOVIZ_GITHUB_API" \
                 -H "Content-Type: application/octet-stream" \
                 --data-binary @"$file" \
                 "https://uploads.github.com/repos/nasa/koviz/releases/$RELEASE_ID/assets?name=$(basename $file)"
        done
   only:
     - tags
   tags:
      - dind
   image: registry.access.redhat.com/ubi8/ubi:latest
